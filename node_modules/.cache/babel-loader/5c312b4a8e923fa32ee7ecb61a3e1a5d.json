{"ast":null,"code":"var _jsxFileName = \"/Users/batapatn/Documents/myRepos/uko-javascript/src/components/Dashboards/projectManagement/TeamProgress.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, ButtonBase, Card, LinearProgress, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport FlexBox from \"components/FlexBox\";\nimport { H5, H6, Small } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRowSelect, useTable } from \"react-table\";\nimport ScrollBar from \"simplebar-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TeamProgress = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const columns = useMemo(() => columnShape, []);\n  const data = useMemo(() => fakeData, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(H5, {\n      children: t(\"Team Progress\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Small, {\n      color: \"text.disabled\",\n      display: \"block\",\n      mb: 2,\n      children: \"890,344 Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollBar, {\n      children: /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps({\n                style: {\n                  minWidth: column.minWidth,\n                  maxWidth: column.maxWidth\n                }\n              }),\n              sx: {\n                fontSize: 12,\n                fontWeight: 600,\n                color: \"text.disabled\",\n                paddingBottom: 0\n              },\n              children: column.render(\"Header\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 52\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, { ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps(),\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 42\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TeamProgress, \"qtvtVpmDGoKeyNnGVXHOxu+M6p8=\", false, function () {\n  return [useTranslation, useTable];\n});\n\n_c = TeamProgress;\nconst columnShape = [{\n  Header: \"Author\",\n  accessor: \"author\",\n  minWidth: 200,\n  maxWidth: 200,\n  Cell: _ref => {\n    let {\n      value\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(FlexBox, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(UkoAvatar, {\n        src: value.image,\n        alt: value.name,\n        sx: {\n          borderRadius: \"15%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: 1,\n        children: [/*#__PURE__*/_jsxDEV(H6, {\n          children: value.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Small, {\n          color: \"text.disabled\",\n          display: \"block\",\n          children: value.skill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  Header: \"Company\",\n  accessor: \"company\",\n  minWidth: 150,\n  maxWidth: 150,\n  Cell: _ref2 => {\n    let {\n      value\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(H6, {\n        children: value.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Small, {\n        color: \"text.disabled\",\n        display: \"block\",\n        children: value.service\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}, {\n  Header: \"Progress\",\n  accessor: \"progress\",\n  minWidth: 150,\n  maxWidth: 150,\n  Cell: _ref3 => {\n    let {\n      value\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: value,\n      sx: {\n        height: 5,\n        borderRadius: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n}, {\n  Header: \"Action\",\n  accessor: \"action\",\n  Cell: _s2(props => {\n    _s2();\n\n    const navigate = useNavigate();\n    return /*#__PURE__*/_jsxDEV(ButtonBase, {\n      sx: {\n        padding: \"5px 10px\",\n        borderRadius: \"8px\",\n        color: \"text.disabled\",\n        backgroundColor: \"secondary.200\"\n      },\n      onClick: () => navigate(\"/dashboard/project-details\"),\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  })\n}];\nconst fakeData = [{\n  id: 1,\n  author: {\n    name: \"Brad Simmons\",\n    skill: \"HTML, JS, ReactJS\",\n    image: \"/static/avatar/001-man.svg\"\n  },\n  company: {\n    name: \"Intertico\",\n    service: \"Web, UI/UX Design\"\n  },\n  progress: 90\n}, {\n  id: 2,\n  author: {\n    name: \"Selena Williams\",\n    skill: \"HTML, JS, VueJS\",\n    image: \"/static/avatar/002-girl.svg\"\n  },\n  company: {\n    name: \"Web Devs\",\n    service: \"Web, Mobile Apps\"\n  },\n  progress: 65\n}, {\n  id: 3,\n  author: {\n    name: \"Steve Jobs\",\n    skill: \"Python, Django\",\n    image: \"/static/avatar/005-man-1.svg\"\n  },\n  company: {\n    name: \"PyCharm\",\n    service: \"ML, DS\"\n  },\n  progress: 78\n}];\nexport default TeamProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamProgress\");","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/components/Dashboards/projectManagement/TeamProgress.jsx"],"names":["Box","ButtonBase","Card","LinearProgress","Table","TableBody","TableCell","TableHead","TableRow","FlexBox","H5","H6","Small","UkoAvatar","useMemo","useTranslation","useNavigate","useRowSelect","useTable","ScrollBar","TeamProgress","t","columns","columnShape","data","fakeData","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","padding","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","style","minWidth","maxWidth","fontSize","fontWeight","color","paddingBottom","render","row","getRowProps","cells","cell","getCellProps","Header","accessor","Cell","value","image","name","borderRadius","skill","service","height","props","navigate","backgroundColor","id","author","company","progress"],"mappings":"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","sourcesContent":["import { Box, ButtonBase, Card, LinearProgress, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport FlexBox from \"components/FlexBox\";\nimport { H5, H6, Small } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRowSelect, useTable } from \"react-table\";\nimport ScrollBar from \"simplebar-react\";\n\nconst TeamProgress = () => {\n  const {\n    t\n  } = useTranslation();\n  const columns = useMemo(() => columnShape, []);\n  const data = useMemo(() => fakeData, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect);\n  return <Card sx={{\n    padding: 2\n  }}>\n      <H5>{t(\"Team Progress\")}</H5>\n      <Small color=\"text.disabled\" display=\"block\" mb={2}>\n        890,344 Sales\n      </Small>\n\n      <ScrollBar>\n        <Table {...getTableProps()}>\n          <TableHead>\n            {headerGroups.map(headerGroup => <TableRow {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => <TableCell {...column.getHeaderProps({\n              style: {\n                minWidth: column.minWidth,\n                maxWidth: column.maxWidth\n              }\n            })} sx={{\n              fontSize: 12,\n              fontWeight: 600,\n              color: \"text.disabled\",\n              paddingBottom: 0\n            }}>\n                    {column.render(\"Header\")}\n                  </TableCell>)}\n              </TableRow>)}\n          </TableHead>\n\n          <TableBody {...getTableBodyProps()}>\n            {rows.map(row => {\n            prepareRow(row);\n            return <TableRow {...row.getRowProps()}>\n                  {row.cells.map(cell => <TableCell {...cell.getCellProps()}>\n                      {cell.render(\"Cell\")}\n                    </TableCell>)}\n                </TableRow>;\n          })}\n          </TableBody>\n        </Table>\n      </ScrollBar>\n    </Card>;\n};\n\nconst columnShape = [{\n  Header: \"Author\",\n  accessor: \"author\",\n  minWidth: 200,\n  maxWidth: 200,\n  Cell: ({\n    value\n  }) => <FlexBox alignItems=\"center\">\n        <UkoAvatar src={value.image} alt={value.name} sx={{\n      borderRadius: \"15%\"\n    }} />\n\n        <Box ml={1}>\n          <H6>{value.name}</H6>\n          <Small color=\"text.disabled\" display=\"block\">\n            {value.skill}\n          </Small>\n        </Box>\n      </FlexBox>\n}, {\n  Header: \"Company\",\n  accessor: \"company\",\n  minWidth: 150,\n  maxWidth: 150,\n  Cell: ({\n    value\n  }) => <>\n        <H6>{value.name}</H6>\n        <Small color=\"text.disabled\" display=\"block\">\n          {value.service}\n        </Small>\n      </>\n}, {\n  Header: \"Progress\",\n  accessor: \"progress\",\n  minWidth: 150,\n  maxWidth: 150,\n  Cell: ({\n    value\n  }) => {\n    return <LinearProgress variant=\"determinate\" value={value} sx={{\n      height: 5,\n      borderRadius: 5\n    }} />;\n  }\n}, {\n  Header: \"Action\",\n  accessor: \"action\",\n  Cell: props => {\n    const navigate = useNavigate();\n    return <ButtonBase sx={{\n      padding: \"5px 10px\",\n      borderRadius: \"8px\",\n      color: \"text.disabled\",\n      backgroundColor: \"secondary.200\"\n    }} onClick={() => navigate(\"/dashboard/project-details\")}>\n          View\n        </ButtonBase>;\n  }\n}];\nconst fakeData = [{\n  id: 1,\n  author: {\n    name: \"Brad Simmons\",\n    skill: \"HTML, JS, ReactJS\",\n    image: \"/static/avatar/001-man.svg\"\n  },\n  company: {\n    name: \"Intertico\",\n    service: \"Web, UI/UX Design\"\n  },\n  progress: 90\n}, {\n  id: 2,\n  author: {\n    name: \"Selena Williams\",\n    skill: \"HTML, JS, VueJS\",\n    image: \"/static/avatar/002-girl.svg\"\n  },\n  company: {\n    name: \"Web Devs\",\n    service: \"Web, Mobile Apps\"\n  },\n  progress: 65\n}, {\n  id: 3,\n  author: {\n    name: \"Steve Jobs\",\n    skill: \"Python, Django\",\n    image: \"/static/avatar/005-man-1.svg\"\n  },\n  company: {\n    name: \"PyCharm\",\n    service: \"ML, DS\"\n  },\n  progress: 78\n}];\nexport default TeamProgress;"]},"metadata":{},"sourceType":"module"}