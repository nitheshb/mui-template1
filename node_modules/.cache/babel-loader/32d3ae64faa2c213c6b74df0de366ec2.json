{"ast":null,"code":"var _jsxFileName = \"/Users/batapatn/Documents/myRepos/uko-javascript/src/pages/AccountSettings.jsx\",\n    _s = $RefreshSig$();\n\nimport { Instagram, NotificationsNone } from \"@mui/icons-material\";\nimport { Box, Button, Card, Grid, styled, useTheme } from \"@mui/material\";\nimport ConnectAccounts from \"components/accountSettings/ConnectAccounts\";\nimport Experiences from \"components/accountSettings/Experiences\";\nimport Notifications from \"components/accountSettings/Notifications\";\nimport Password from \"components/accountSettings/Password\";\nimport Preferences from \"components/accountSettings/Preferences\";\nimport RecentDevices from \"components/accountSettings/RecentDevices\";\nimport Skills from \"components/accountSettings/Skills\";\nimport SocialAccounts from \"components/accountSettings/SocialAccounts\";\nimport UserInfo from \"components/accountSettings/UserInfo\";\nimport FlexBox from \"components/FlexBox\";\nimport { H3 } from \"components/Typography\";\nimport useTitle from \"hooks/useTitle\";\nimport BadgeIcon from \"icons/BadgeIcon\";\nimport DevicesIcon from \"icons/DevicesIcon\";\nimport DiamondIcon from \"icons/DiamondIcon\";\nimport PasswordIcon from \"icons/PasswordIcon\";\nimport ProfileIcon from \"icons/ProfileIcon\";\nimport SettingIcon from \"icons/SettingIcon\";\nimport ShareAccountIcon from \"icons/ShareAccount\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport convertToSlug from \"utils/convertSlug\"; // styled component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButton = styled(Button)(() => ({\n  fontSize: 12,\n  borderRadius: 0,\n  marginTop: \"0.4rem\",\n  position: \"relative\",\n  justifyContent: \"flex-start\"\n}));\n\nconst AccountSettings = () => {\n  _s();\n\n  // change navbar title\n  useTitle(\"Account Settings\");\n  const theme = useTheme();\n  const {\n    t\n  } = useTranslation();\n  const [active, setActive] = useState(\"user-info\");\n  const style = {\n    backgroundColor: theme.palette.mode === \"light\" ? theme.palette.secondary.light : theme.palette.divider,\n    color: theme.palette.primary.main,\n    \"&::before\": {\n      width: 4,\n      right: 0,\n      content: '\"\"',\n      height: \"100%\",\n      position: \"absolute\",\n      backgroundColor: theme.palette.primary.main\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pt: 2,\n    pb: 4,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            padding: \"1.5rem 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(H3, {\n            mb: \"0.5rem\",\n            pl: \"1.5rem\",\n            children: t(\"User Profile\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FlexBox, {\n            flexDirection: \"column\",\n            sx: {\n              [theme.breakpoints.between(\"sm\", 960)]: {\n                flexWrap: \"wrap\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              }\n            },\n            children: tabList.map(_ref => {\n              let {\n                id,\n                name,\n                Icon\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(StyledButton, {\n                startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                  sx: {\n                    color: \"text.disabled\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 53\n                }, this),\n                onClick: () => setActive(convertToSlug(name)),\n                sx: active === convertToSlug(name) ? style : {\n                  \"&:hover\": style\n                },\n                children: t(name)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 9,\n        xs: 12,\n        children: [active === convertToSlug(tabList[0].name) && /*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 57\n        }, this), active === convertToSlug(tabList[1].name) && /*#__PURE__*/_jsxDEV(Experiences, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 57\n        }, this), active === convertToSlug(tabList[2].name) && /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 57\n        }, this), active === convertToSlug(tabList[3].name) && /*#__PURE__*/_jsxDEV(Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 57\n        }, this), active === convertToSlug(tabList[4].name) && /*#__PURE__*/_jsxDEV(Preferences, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 57\n        }, this), active === convertToSlug(tabList[5].name) && /*#__PURE__*/_jsxDEV(ConnectAccounts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 57\n        }, this), active === convertToSlug(tabList[6].name) && /*#__PURE__*/_jsxDEV(RecentDevices, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 57\n        }, this), active === convertToSlug(tabList[7].name) && /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 57\n        }, this), active === convertToSlug(tabList[8].name) && /*#__PURE__*/_jsxDEV(SocialAccounts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AccountSettings, \"atoq3zDqwCir+Yr2NN1j8TRnjCo=\", false, function () {\n  return [useTitle, useTheme, useTranslation];\n});\n\n_c = AccountSettings;\nconst tabList = [{\n  id: 1,\n  name: \"User Info\",\n  Icon: ProfileIcon\n}, {\n  id: 2,\n  name: \"Experiences\",\n  Icon: BadgeIcon\n}, {\n  id: 3,\n  name: \"Skills\",\n  Icon: DiamondIcon\n}, {\n  id: 4,\n  name: \"Password\",\n  Icon: PasswordIcon\n}, {\n  id: 5,\n  name: \"Preferences\",\n  Icon: SettingIcon\n}, {\n  id: 6,\n  name: \"Connected Accounts\",\n  Icon: ShareAccountIcon\n}, {\n  id: 7,\n  name: \"Recent Devices\",\n  Icon: DevicesIcon\n}, {\n  id: 8,\n  name: \"Notifications\",\n  Icon: NotificationsNone\n}, {\n  id: 9,\n  name: \"Social Accounts\",\n  Icon: Instagram\n}];\nexport default AccountSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettings\");","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/pages/AccountSettings.jsx"],"names":["Instagram","NotificationsNone","Box","Button","Card","Grid","styled","useTheme","ConnectAccounts","Experiences","Notifications","Password","Preferences","RecentDevices","Skills","SocialAccounts","UserInfo","FlexBox","H3","useTitle","BadgeIcon","DevicesIcon","DiamondIcon","PasswordIcon","ProfileIcon","SettingIcon","ShareAccountIcon","useState","useTranslation","convertToSlug","StyledButton","fontSize","borderRadius","marginTop","position","justifyContent","AccountSettings","theme","t","active","setActive","style","backgroundColor","palette","mode","secondary","light","divider","color","primary","main","width","right","content","height","padding","breakpoints","between","flexWrap","flexDirection","tabList","map","id","name","Icon"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,iBAApB,QAA6C,qBAA7C;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,MAAlC,EAA0CC,QAA1C,QAA0D,eAA1D;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,EAAT,QAAmB,uBAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,aAAP,MAA0B,mBAA1B,C,CAA+C;;;AAE/C,MAAMC,YAAY,GAAGxB,MAAM,CAACH,MAAD,CAAN,CAAe,OAAO;AACzC4B,EAAAA,QAAQ,EAAE,EAD+B;AAEzCC,EAAAA,YAAY,EAAE,CAF2B;AAGzCC,EAAAA,SAAS,EAAE,QAH8B;AAIzCC,EAAAA,QAAQ,EAAE,UAJ+B;AAKzCC,EAAAA,cAAc,EAAE;AALyB,CAAP,CAAf,CAArB;;AAQA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B;AACAjB,EAAAA,QAAQ,CAAC,kBAAD,CAAR;AACA,QAAMkB,KAAK,GAAG9B,QAAQ,EAAtB;AACA,QAAM;AACJ+B,IAAAA;AADI,MAEFV,cAAc,EAFlB;AAGA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,WAAD,CAApC;AACA,QAAMc,KAAK,GAAG;AACZC,IAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GAAiCP,KAAK,CAACM,OAAN,CAAcE,SAAd,CAAwBC,KAAzD,GAAiET,KAAK,CAACM,OAAN,CAAcI,OADpF;AAEZC,IAAAA,KAAK,EAAEX,KAAK,CAACM,OAAN,CAAcM,OAAd,CAAsBC,IAFjB;AAGZ,iBAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXC,MAAAA,MAAM,EAAE,MAJG;AAKXpB,MAAAA,QAAQ,EAAE,UALC;AAMXQ,MAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcM,OAAd,CAAsBC;AAN5B;AAHD,GAAd;AAYA,sBAAO,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAA,2BACH,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AACVK,YAAAA,OAAO,EAAE;AADC,WAAV;AAAA,kCAGE,QAAC,EAAD;AAAI,YAAA,EAAE,EAAC,QAAP;AAAgB,YAAA,EAAE,EAAC,QAAnB;AAAA,sBACGjB,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHF,eAOE,QAAC,OAAD;AAAS,YAAA,aAAa,EAAC,QAAvB;AAAgC,YAAA,EAAE,EAAE;AACpC,eAACD,KAAK,CAACmB,WAAN,CAAkBC,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAAD,GAAwC;AACtCC,gBAAAA,QAAQ,EAAE,MAD4B;AAEtCC,gBAAAA,aAAa,EAAE,KAFuB;AAGtCxB,gBAAAA,cAAc,EAAE;AAHsB;AADJ,aAApC;AAAA,sBAOGyB,OAAO,CAACC,GAAR,CAAY;AAAA,kBAAC;AACdC,gBAAAA,EADc;AAEdC,gBAAAA,IAFc;AAGdC,gBAAAA;AAHc,eAAD;AAAA,kCAIT,QAAC,YAAD;AAAuB,gBAAA,SAAS,eAAE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAE;AAChDhB,oBAAAA,KAAK,EAAE;AADyC;AAAV;AAAA;AAAA;AAAA;AAAA,wBAAlC;AAEC,gBAAA,OAAO,EAAE,MAAMR,SAAS,CAACX,aAAa,CAACkC,IAAD,CAAd,CAFzB;AAEgD,gBAAA,EAAE,EAAExB,MAAM,KAAKV,aAAa,CAACkC,IAAD,CAAxB,GAAiCtB,KAAjC,GAAyC;AACjG,6BAAWA;AADsF,iBAF7F;AAAA,0BAKCH,CAAC,CAACyB,IAAD;AALF,iBAAmBD,EAAnB;AAAA;AAAA;AAAA;AAAA,sBAJS;AAAA,aAAZ;AAPH;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eA+BE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAAA,mBACGvB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADhD,EAEGxB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFhD,EAGGxB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAHhD,EAIGxB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAJhD,EAKGxB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBALhD,EAMGxB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBANhD,EAOGxB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAPhD,EAQGxB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBARhD,EASGxB,MAAM,KAAKV,aAAa,CAAC+B,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAZ,CAAxB,iBAA6C,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAThD;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AA6CD,CAjED;;GAAM3B,e;UAEJjB,Q,EACcZ,Q,EAGVqB,c;;;KANAQ,e;AAmEN,MAAMwB,OAAO,GAAG,CAAC;AACfE,EAAAA,EAAE,EAAE,CADW;AAEfC,EAAAA,IAAI,EAAE,WAFS;AAGfC,EAAAA,IAAI,EAAExC;AAHS,CAAD,EAIb;AACDsC,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,aAFL;AAGDC,EAAAA,IAAI,EAAE5C;AAHL,CAJa,EAQb;AACD0C,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,QAFL;AAGDC,EAAAA,IAAI,EAAE1C;AAHL,CARa,EAYb;AACDwC,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,UAFL;AAGDC,EAAAA,IAAI,EAAEzC;AAHL,CAZa,EAgBb;AACDuC,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,aAFL;AAGDC,EAAAA,IAAI,EAAEvC;AAHL,CAhBa,EAoBb;AACDqC,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,oBAFL;AAGDC,EAAAA,IAAI,EAAEtC;AAHL,CApBa,EAwBb;AACDoC,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,gBAFL;AAGDC,EAAAA,IAAI,EAAE3C;AAHL,CAxBa,EA4Bb;AACDyC,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,eAFL;AAGDC,EAAAA,IAAI,EAAE/D;AAHL,CA5Ba,EAgCb;AACD6D,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,iBAFL;AAGDC,EAAAA,IAAI,EAAEhE;AAHL,CAhCa,CAAhB;AAqCA,eAAeoC,eAAf","sourcesContent":["import { Instagram, NotificationsNone } from \"@mui/icons-material\";\nimport { Box, Button, Card, Grid, styled, useTheme } from \"@mui/material\";\nimport ConnectAccounts from \"components/accountSettings/ConnectAccounts\";\nimport Experiences from \"components/accountSettings/Experiences\";\nimport Notifications from \"components/accountSettings/Notifications\";\nimport Password from \"components/accountSettings/Password\";\nimport Preferences from \"components/accountSettings/Preferences\";\nimport RecentDevices from \"components/accountSettings/RecentDevices\";\nimport Skills from \"components/accountSettings/Skills\";\nimport SocialAccounts from \"components/accountSettings/SocialAccounts\";\nimport UserInfo from \"components/accountSettings/UserInfo\";\nimport FlexBox from \"components/FlexBox\";\nimport { H3 } from \"components/Typography\";\nimport useTitle from \"hooks/useTitle\";\nimport BadgeIcon from \"icons/BadgeIcon\";\nimport DevicesIcon from \"icons/DevicesIcon\";\nimport DiamondIcon from \"icons/DiamondIcon\";\nimport PasswordIcon from \"icons/PasswordIcon\";\nimport ProfileIcon from \"icons/ProfileIcon\";\nimport SettingIcon from \"icons/SettingIcon\";\nimport ShareAccountIcon from \"icons/ShareAccount\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport convertToSlug from \"utils/convertSlug\"; // styled component\n\nconst StyledButton = styled(Button)(() => ({\n  fontSize: 12,\n  borderRadius: 0,\n  marginTop: \"0.4rem\",\n  position: \"relative\",\n  justifyContent: \"flex-start\"\n}));\n\nconst AccountSettings = () => {\n  // change navbar title\n  useTitle(\"Account Settings\");\n  const theme = useTheme();\n  const {\n    t\n  } = useTranslation();\n  const [active, setActive] = useState(\"user-info\");\n  const style = {\n    backgroundColor: theme.palette.mode === \"light\" ? theme.palette.secondary.light : theme.palette.divider,\n    color: theme.palette.primary.main,\n    \"&::before\": {\n      width: 4,\n      right: 0,\n      content: '\"\"',\n      height: \"100%\",\n      position: \"absolute\",\n      backgroundColor: theme.palette.primary.main\n    }\n  };\n  return <Box pt={2} pb={4}>\n      <Grid container spacing={3}>\n        <Grid item md={3} xs={12}>\n          <Card sx={{\n          padding: \"1.5rem 0\"\n        }}>\n            <H3 mb=\"0.5rem\" pl=\"1.5rem\">\n              {t(\"User Profile\")}\n            </H3>\n\n            <FlexBox flexDirection=\"column\" sx={{\n            [theme.breakpoints.between(\"sm\", 960)]: {\n              flexWrap: \"wrap\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            }\n          }}>\n              {tabList.map(({\n              id,\n              name,\n              Icon\n            }) => <StyledButton key={id} startIcon={<Icon sx={{\n              color: \"text.disabled\"\n            }} />} onClick={() => setActive(convertToSlug(name))} sx={active === convertToSlug(name) ? style : {\n              \"&:hover\": style\n            }}>\n                  {t(name)}\n                </StyledButton>)}\n            </FlexBox>\n          </Card>\n        </Grid>\n\n        <Grid item md={9} xs={12}>\n          {active === convertToSlug(tabList[0].name) && <UserInfo />}\n          {active === convertToSlug(tabList[1].name) && <Experiences />}\n          {active === convertToSlug(tabList[2].name) && <Skills />}\n          {active === convertToSlug(tabList[3].name) && <Password />}\n          {active === convertToSlug(tabList[4].name) && <Preferences />}\n          {active === convertToSlug(tabList[5].name) && <ConnectAccounts />}\n          {active === convertToSlug(tabList[6].name) && <RecentDevices />}\n          {active === convertToSlug(tabList[7].name) && <Notifications />}\n          {active === convertToSlug(tabList[8].name) && <SocialAccounts />}\n        </Grid>\n      </Grid>\n    </Box>;\n};\n\nconst tabList = [{\n  id: 1,\n  name: \"User Info\",\n  Icon: ProfileIcon\n}, {\n  id: 2,\n  name: \"Experiences\",\n  Icon: BadgeIcon\n}, {\n  id: 3,\n  name: \"Skills\",\n  Icon: DiamondIcon\n}, {\n  id: 4,\n  name: \"Password\",\n  Icon: PasswordIcon\n}, {\n  id: 5,\n  name: \"Preferences\",\n  Icon: SettingIcon\n}, {\n  id: 6,\n  name: \"Connected Accounts\",\n  Icon: ShareAccountIcon\n}, {\n  id: 7,\n  name: \"Recent Devices\",\n  Icon: DevicesIcon\n}, {\n  id: 8,\n  name: \"Notifications\",\n  Icon: NotificationsNone\n}, {\n  id: 9,\n  name: \"Social Accounts\",\n  Icon: Instagram\n}];\nexport default AccountSettings;"]},"metadata":{},"sourceType":"module"}