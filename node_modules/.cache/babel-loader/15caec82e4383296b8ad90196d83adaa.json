{"ast":null,"code":"var _jsxFileName = \"/Users/batapatn/Documents/myRepos/uko-javascript/src/components/dataTable/dataTableV2/DataTable.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Box, Checkbox, Stack, Table, TableBody, TableCell, TableHead, TableRow, useTheme } from \"@mui/material\";\nimport BlankCheckBoxIcon from \"icons/BlankCheckBoxIcon\";\nimport CheckBoxIcon from \"icons/CheckBoxIcon\";\nimport React, { forwardRef, useEffect, useMemo, useRef } from \"react\";\nimport { useFilters, usePagination, useRowSelect, useTable } from \"react-table\";\nimport ScrollBar from \"simplebar-react\";\nimport columnShape from \"./columnShape\";\nimport { StyledPagination, StyledSearchIcon, StyledSearchInput, StyledTableBodyRow } from \"./styledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectCheckBox = /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    indeterminate,\n    ...rest\n  } = _ref;\n  const defaultRef = useRef();\n  const resolvedRef = ref || defaultRef;\n  useEffect(() => {\n    if (resolvedRef) {\n      resolvedRef.current.indeterminate = indeterminate;\n    }\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(Checkbox, { ...rest,\n    ref: resolvedRef,\n    disableRipple: true,\n    checkedIcon: /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n      fontSize: \"small\",\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 75\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(BlankCheckBoxIcon, {\n      fontSize: \"small\",\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 132\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n_c2 = SelectCheckBox;\n\nfunction SearchFilter(_ref2) {\n  _s2();\n\n  let {\n    column\n  } = _ref2;\n  const {\n    filterValue,\n    setFilter\n  } = column;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(StyledSearchInput, {\n    value: filterValue || \"\",\n    onChange: e => setFilter(e.target.value),\n    startAdornment: /*#__PURE__*/_jsxDEV(StyledSearchIcon, {\n      sx: {\n        color: \"text.disabled\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 113\n    }, this),\n    sx: {\n      backgroundColor: theme.palette.mode === \"light\" ? \"#ECEFF5\" : theme.palette.divider,\n      borderRadius: \"8px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(SearchFilter, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c3 = SearchFilter;\n\nconst DataTable = _ref3 => {\n  _s3();\n\n  let {\n    data,\n    clearFilter,\n    handleRowSelect,\n    onFilterChange\n  } = _ref3;\n  const tableData = useMemo(() => data, [data]);\n  const columns = useMemo(() => columnShape, []);\n  const defaultColumn = useMemo(() => ({\n    Filter: SearchFilter\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageOptions,\n    gotoPage,\n    state,\n    setAllFilters,\n    selectedFlatRows\n  } = useTable({\n    columns,\n    defaultColumn,\n    data: tableData\n  }, useFilters, usePagination, useRowSelect, hooks => {\n    hooks.visibleColumns.push(columns => [{\n      id: \"selection\",\n      Header: _ref4 => {\n        let {\n          getToggleAllRowsSelectedProps\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(SelectCheckBox, { ...getToggleAllRowsSelectedProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      },\n      Cell: _ref5 => {\n        let {\n          row\n        } = _ref5;\n        return /*#__PURE__*/_jsxDEV(SelectCheckBox, { ...row.getToggleRowSelectedProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this);\n      }\n    }, ...columns]);\n  });\n  useEffect(() => {\n    handleRowSelect(selectedFlatRows);\n  }, [selectedFlatRows, handleRowSelect]);\n  useEffect(() => {\n    setAllFilters([]);\n  }, [clearFilter, setAllFilters]);\n  useEffect(() => {\n    if (onFilterChange) {\n      onFilterChange(state.filters);\n    }\n  }, [onFilterChange, state.filters]); // handle pagination\n\n  const handleChange = (_, currentPageNo) => {\n    gotoPage(currentPageNo - 1);\n  };\n\n  const selectedRow = selectId => {\n    const rowId = Object.keys(state.selectedRowIds);\n    const findId = rowId.find(id => id === selectId);\n    if (findId) return true;\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(ScrollBar, {\n      children: /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps(),\n              sx: {\n                fontSize: 12,\n                fontWeight: 600,\n                minWidth: column.minWidth,\n                borderColor: \"secondary.300\"\n              },\n              children: [column.render(\"Header\"), column.canFilter ? column.render(\"Filter\") : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 52\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, { ...getTableBodyProps(),\n          children: page.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(StyledTableBodyRow, { ...row.getRowProps(),\n              selected_row: selectedRow(row.id) ? \"select\" : \"\",\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps(),\n                sx: {\n                  fontSize: 12,\n                  fontWeight: 500,\n                  borderColor: \"secondary.300\"\n                },\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 42\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      alignItems: \"center\",\n      marginY: \"1rem\",\n      children: /*#__PURE__*/_jsxDEV(StyledPagination, {\n        shape: \"rounded\",\n        onChange: handleChange,\n        count: pageOptions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n\n_s3(DataTable, \"Wfa5091Lp4UzyGr2qsn/yEVYYCY=\", false, function () {\n  return [useTable];\n});\n\n_c4 = DataTable;\nexport default DataTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SelectCheckBox$forwardRef\");\n$RefreshReg$(_c2, \"SelectCheckBox\");\n$RefreshReg$(_c3, \"SearchFilter\");\n$RefreshReg$(_c4, \"DataTable\");","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/components/dataTable/dataTableV2/DataTable.jsx"],"names":["Box","Checkbox","Stack","Table","TableBody","TableCell","TableHead","TableRow","useTheme","BlankCheckBoxIcon","CheckBoxIcon","React","forwardRef","useEffect","useMemo","useRef","useFilters","usePagination","useRowSelect","useTable","ScrollBar","columnShape","StyledPagination","StyledSearchIcon","StyledSearchInput","StyledTableBodyRow","SelectCheckBox","ref","indeterminate","rest","defaultRef","resolvedRef","current","SearchFilter","column","filterValue","setFilter","theme","e","target","value","color","backgroundColor","palette","mode","divider","borderRadius","DataTable","data","clearFilter","handleRowSelect","onFilterChange","tableData","columns","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","gotoPage","state","setAllFilters","selectedFlatRows","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","filters","handleChange","_","currentPageNo","selectedRow","selectId","rowId","Object","keys","selectedRowIds","findId","find","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","fontSize","fontWeight","minWidth","borderColor","render","canFilter","getRowProps","cells","cell","getCellProps","length"],"mappings":"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","sourcesContent":["import { Box, Checkbox, Stack, Table, TableBody, TableCell, TableHead, TableRow, useTheme } from \"@mui/material\";\nimport BlankCheckBoxIcon from \"icons/BlankCheckBoxIcon\";\nimport CheckBoxIcon from \"icons/CheckBoxIcon\";\nimport React, { forwardRef, useEffect, useMemo, useRef } from \"react\";\nimport { useFilters, usePagination, useRowSelect, useTable } from \"react-table\";\nimport ScrollBar from \"simplebar-react\";\nimport columnShape from \"./columnShape\";\nimport { StyledPagination, StyledSearchIcon, StyledSearchInput, StyledTableBodyRow } from \"./styledComponents\";\nconst SelectCheckBox = forwardRef(({\n  indeterminate,\n  ...rest\n}, ref) => {\n  const defaultRef = useRef();\n  const resolvedRef = ref || defaultRef;\n  useEffect(() => {\n    if (resolvedRef) {\n      resolvedRef.current.indeterminate = indeterminate;\n    }\n  }, [resolvedRef, indeterminate]);\n  return <Checkbox {...rest} ref={resolvedRef} disableRipple checkedIcon={<CheckBoxIcon fontSize=\"small\" color=\"primary\" />} icon={<BlankCheckBoxIcon fontSize=\"small\" color=\"primary\" />} />;\n});\n\nfunction SearchFilter({\n  column\n}) {\n  const {\n    filterValue,\n    setFilter\n  } = column;\n  const theme = useTheme();\n  return <StyledSearchInput value={filterValue || \"\"} onChange={e => setFilter(e.target.value)} startAdornment={<StyledSearchIcon sx={{\n    color: \"text.disabled\"\n  }} />} sx={{\n    backgroundColor: theme.palette.mode === \"light\" ? \"#ECEFF5\" : theme.palette.divider,\n    borderRadius: \"8px\"\n  }} />;\n}\n\nconst DataTable = ({\n  data,\n  clearFilter,\n  handleRowSelect,\n  onFilterChange\n}) => {\n  const tableData = useMemo(() => data, [data]);\n  const columns = useMemo(() => columnShape, []);\n  const defaultColumn = useMemo(() => ({\n    Filter: SearchFilter\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageOptions,\n    gotoPage,\n    state,\n    setAllFilters,\n    selectedFlatRows\n  } = useTable({\n    columns,\n    defaultColumn,\n    data: tableData\n  }, useFilters, usePagination, useRowSelect, hooks => {\n    hooks.visibleColumns.push(columns => [{\n      id: \"selection\",\n      Header: ({\n        getToggleAllRowsSelectedProps\n      }) => <SelectCheckBox {...getToggleAllRowsSelectedProps()} />,\n      Cell: ({\n        row\n      }) => {\n        return <SelectCheckBox {...row.getToggleRowSelectedProps()} />;\n      }\n    }, ...columns]);\n  });\n  useEffect(() => {\n    handleRowSelect(selectedFlatRows);\n  }, [selectedFlatRows, handleRowSelect]);\n  useEffect(() => {\n    setAllFilters([]);\n  }, [clearFilter, setAllFilters]);\n  useEffect(() => {\n    if (onFilterChange) {\n      onFilterChange(state.filters);\n    }\n  }, [onFilterChange, state.filters]); // handle pagination\n\n  const handleChange = (_, currentPageNo) => {\n    gotoPage(currentPageNo - 1);\n  };\n\n  const selectedRow = selectId => {\n    const rowId = Object.keys(state.selectedRowIds);\n    const findId = rowId.find(id => id === selectId);\n    if (findId) return true;\n    return false;\n  };\n\n  return <Box>\n      <ScrollBar>\n        <Table {...getTableProps()}>\n          <TableHead>\n            {headerGroups.map(headerGroup => <TableRow {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => <TableCell {...column.getHeaderProps()} sx={{\n              fontSize: 12,\n              fontWeight: 600,\n              minWidth: column.minWidth,\n              borderColor: \"secondary.300\"\n            }}>\n                    {column.render(\"Header\")}\n                    {column.canFilter ? column.render(\"Filter\") : null}\n                  </TableCell>)}\n              </TableRow>)}\n          </TableHead>\n\n          <TableBody {...getTableBodyProps()}>\n            {page.map(row => {\n            prepareRow(row);\n            return <StyledTableBodyRow {...row.getRowProps()} selected_row={selectedRow(row.id) ? \"select\" : \"\"}>\n                  {row.cells.map(cell => <TableCell {...cell.getCellProps()} sx={{\n                fontSize: 12,\n                fontWeight: 500,\n                borderColor: \"secondary.300\"\n              }}>\n                      {cell.render(\"Cell\")}\n                    </TableCell>)}\n                </StyledTableBodyRow>;\n          })}\n          </TableBody>\n        </Table>\n      </ScrollBar>\n\n      <Stack alignItems=\"center\" marginY=\"1rem\">\n        <StyledPagination shape=\"rounded\" onChange={handleChange} count={pageOptions.length} />\n      </Stack>\n    </Box>;\n};\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}