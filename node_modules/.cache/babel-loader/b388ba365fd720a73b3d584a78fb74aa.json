{"ast":null,"code":"var _jsxFileName = \"/Users/batapatn/Documents/myRepos/uko-javascript/src/contexts/FirebaseAuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport LoadingScreen from \"components/LoadingScreen\";\nimport { firebaseConfig } from \"config\";\nimport { initializeApp } from \"firebase/app\";\nimport { createUserWithEmailAndPassword, FacebookAuthProvider, getAuth, GoogleAuthProvider, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { collection, doc, getFirestore, setDoc } from \"firebase/firestore\";\nimport { createContext, useEffect, useReducer } from \"react\"; // firebase app initialize\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseApp = initializeApp(firebaseConfig); // auth types\n// ==========================================\n\nvar Types;\n\n(function (Types) {\n  Types[\"Init\"] = \"INIT\";\n})(Types || (Types = {})); // ==========================================\n\n\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\n\nconst reducer = (state, action) => {\n  if (action.type === \"INIT\") {\n    const {\n      isAuthenticated,\n      user\n    } = action.payload;\n    return { ...state,\n      user,\n      isAuthenticated,\n      isInitialized: true\n    };\n  }\n\n  return state;\n};\n\nconst AuthContext = /*#__PURE__*/createContext({ ...initialState,\n  method: \"firebase\",\n  register: (email, password, name) => Promise.resolve(),\n  login: (email, password) => Promise.resolve(),\n  loginWithGoogle: () => Promise.resolve(),\n  loginWithFacebook: () => Promise.resolve(),\n  logout: () => Promise.resolve()\n}); // props type\n\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const auth = getAuth(firebaseApp);\n  const db = getFirestore(firebaseApp);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        dispatch({\n          type: Types.Init,\n          payload: {\n            isAuthenticated: true,\n            user: {\n              id: user.uid,\n              email: user.email,\n              avatar: user.photoURL,\n              name: user.displayName || \"Jason Alexander\"\n            }\n          }\n        });\n      } else {\n        dispatch({\n          type: Types.Init,\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    });\n    return () => unsubscribe();\n  }, [dispatch, auth]);\n\n  const login = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const register = (email, password, name) => createUserWithEmailAndPassword(auth, email, password).then(async response => {\n    var _response$user;\n\n    const userCollection = collection(db, \"users\");\n    const findDoc = doc(userCollection, (_response$user = response.user) === null || _response$user === void 0 ? void 0 : _response$user.uid);\n    await setDoc(findDoc, {\n      email,\n      displayName: name,\n      uid: response.user.uid\n    });\n  }); // .catch((error) => error);\n  // const register = (email: string, password: string, name: string) => {\n  //   return createUserWithEmailAndPassword(auth, email, password);\n  // };\n\n\n  const loginWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  };\n\n  const loginWithFacebook = () => {\n    const provider = new FacebookAuthProvider();\n    return signInWithPopup(auth, provider);\n  };\n\n  const logout = () => auth.signOut();\n\n  if (!state.isInitialized) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      method: \"firebase\",\n      //@ts-ignore\n      login,\n      logout,\n      //@ts-ignore\n      register,\n      //@ts-ignore\n      loginWithGoogle,\n      //@ts-ignore\n      loginWithFacebook\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/contexts/FirebaseAuthContext.jsx"],"names":["LoadingScreen","firebaseConfig","initializeApp","createUserWithEmailAndPassword","FacebookAuthProvider","getAuth","GoogleAuthProvider","signInWithEmailAndPassword","signInWithPopup","collection","doc","getFirestore","setDoc","createContext","useEffect","useReducer","firebaseApp","Types","initialState","isAuthenticated","isInitialized","user","reducer","state","action","type","payload","AuthContext","method","register","email","password","name","Promise","resolve","login","loginWithGoogle","loginWithFacebook","logout","AuthProvider","children","dispatch","auth","db","unsubscribe","onAuthStateChanged","Init","id","uid","avatar","photoURL","displayName","then","response","userCollection","findDoc","provider","signOut"],"mappings":"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","sourcesContent":["import LoadingScreen from \"components/LoadingScreen\";\nimport { firebaseConfig } from \"config\";\nimport { initializeApp } from \"firebase/app\";\nimport { createUserWithEmailAndPassword, FacebookAuthProvider, getAuth, GoogleAuthProvider, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { collection, doc, getFirestore, setDoc } from \"firebase/firestore\";\nimport { createContext, useEffect, useReducer } from \"react\";\n// firebase app initialize\nconst firebaseApp = initializeApp(firebaseConfig); // auth types\n// ==========================================\n\nvar Types;\n\n(function (Types) {\n  Types[\"Init\"] = \"INIT\";\n})(Types || (Types = {}));\n\n// ==========================================\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\n\nconst reducer = (state, action) => {\n  if (action.type === \"INIT\") {\n    const {\n      isAuthenticated,\n      user\n    } = action.payload;\n    return { ...state,\n      user,\n      isAuthenticated,\n      isInitialized: true\n    };\n  }\n\n  return state;\n};\n\nconst AuthContext = createContext({ ...initialState,\n  method: \"firebase\",\n  register: (email, password, name) => Promise.resolve(),\n  login: (email, password) => Promise.resolve(),\n  loginWithGoogle: () => Promise.resolve(),\n  loginWithFacebook: () => Promise.resolve(),\n  logout: () => Promise.resolve()\n}); // props type\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const auth = getAuth(firebaseApp);\n  const db = getFirestore(firebaseApp);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        dispatch({\n          type: Types.Init,\n          payload: {\n            isAuthenticated: true,\n            user: {\n              id: user.uid,\n              email: user.email,\n              avatar: user.photoURL,\n              name: user.displayName || \"Jason Alexander\"\n            }\n          }\n        });\n      } else {\n        dispatch({\n          type: Types.Init,\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    });\n    return () => unsubscribe();\n  }, [dispatch, auth]);\n\n  const login = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const register = (email, password, name) => createUserWithEmailAndPassword(auth, email, password).then(async response => {\n    const userCollection = collection(db, \"users\");\n    const findDoc = doc(userCollection, response.user?.uid);\n    await setDoc(findDoc, {\n      email,\n      displayName: name,\n      uid: response.user.uid\n    });\n  }); // .catch((error) => error);\n  // const register = (email: string, password: string, name: string) => {\n  //   return createUserWithEmailAndPassword(auth, email, password);\n  // };\n\n\n  const loginWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  };\n\n  const loginWithFacebook = () => {\n    const provider = new FacebookAuthProvider();\n    return signInWithPopup(auth, provider);\n  };\n\n  const logout = () => auth.signOut();\n\n  if (!state.isInitialized) {\n    return <LoadingScreen />;\n  }\n\n  return <AuthContext.Provider value={{ ...state,\n    method: \"firebase\",\n    //@ts-ignore\n    login,\n    logout,\n    //@ts-ignore\n    register,\n    //@ts-ignore\n    loginWithGoogle,\n    //@ts-ignore\n    loginWithFacebook\n  }}>\n      {children}\n    </AuthContext.Provider>;\n};\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}