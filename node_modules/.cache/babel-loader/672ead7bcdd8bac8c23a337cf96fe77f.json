{"ast":null,"code":"var _jsxFileName = \"/Users/batapatn/Documents/myRepos/uko-javascript/src/components/dataTable/dataTableV1/AddEmployeeModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Card, Grid, IconButton, Modal, styled } from \"@mui/material\";\nimport DarkTextField from \"components/DarkTextField\";\nimport FlexBox from \"components/FlexBox\";\nimport { H2, H6, Small } from \"components/Typography\";\nimport { useFormik } from \"formik\";\nimport ImageUploadIcon from \"icons/ImageUploadIcon\";\nimport toast from \"react-hot-toast\";\nimport axiosInstance from \"utils/axios\";\nimport * as Yup from \"yup\"; // component props interface\n// styled components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledModalCard = styled(Card)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    top: \"50%\",\n    left: \"50%\",\n    maxWidth: 400,\n    minWidth: 200,\n    position: \"absolute\",\n    padding: \"1.5rem\",\n    boxShadow: theme.shadows[2],\n    transform: \"translate(-50%, -50%)\",\n    width: \"100%\",\n    [theme.breakpoints.down(325)]: {\n      maxWidth: \"100%\"\n    }\n  };\n});\n\nconst AddEmployeeModal = _ref2 => {\n  _s();\n\n  let {\n    open,\n    onClose,\n    edit,\n    data\n  } = _ref2;\n  const initialValues = {\n    name: (data === null || data === void 0 ? void 0 : data.name) || \"\",\n    username: (data === null || data === void 0 ? void 0 : data.username) || \"\",\n    email: (data === null || data === void 0 ? void 0 : data.email) || \"\",\n    avatar: (data === null || data === void 0 ? void 0 : data.avatar) || \"\",\n    role: (data === null || data === void 0 ? void 0 : data.role) || \"\"\n  };\n  const fieldValidationSchema = Yup.object().shape({\n    name: Yup.string().min(3, \"Too Short\").required(\"Name is Required!\"),\n    username: Yup.string().min(3, \"Too Short\").required(\"Username is Required!\"),\n    email: Yup.string().required(\"Email is Required!\"),\n    // avatar: Yup.string().required(\"Avatar is Required!\"),\n    role: Yup.string().required(\"Role is Required!\")\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    touched\n  } = useFormik({\n    initialValues,\n    validationSchema: fieldValidationSchema,\n    onSubmit: values => {\n      axiosInstance.post(\"/api/tableData1/new\", {\n        name: values.name,\n        username: values.username,\n        email: values.email,\n        role: values.role\n      }).then(() => {\n        onClose();\n        toast.success(\"New Data Added Successfully\");\n      }).catch(error => console.log(error));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(StyledModalCard, {\n      children: [/*#__PURE__*/_jsxDEV(H2, {\n        mb: 2,\n        children: edit ? \"Edit Employee\" : \"Add new Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          className: \"main-form\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(H6, {\n              mb: 1,\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n              name: \"name\",\n              placeholder: \"Name\",\n              onChange: handleChange,\n              value: values.name,\n              error: Boolean(errors.name && touched.name),\n              helperText: touched.name && errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(H6, {\n              mb: 1,\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n              name: \"username\",\n              placeholder: \"Username\",\n              onChange: handleChange,\n              value: values.username,\n              error: Boolean(errors.username && touched.username),\n              helperText: touched.username && errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(H6, {\n              mb: 1,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n              name: \"email\",\n              placeholder: \"uilib@gmail.com\",\n              onChange: handleChange,\n              value: values.email,\n              error: Boolean(errors.email && touched.email),\n              helperText: touched.email && errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(H6, {\n              mb: 1,\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n              name: \"role\",\n              placeholder: \"developer\",\n              onChange: handleChange,\n              value: values.role,\n              error: Boolean(errors.role && touched.role),\n              helperText: touched.role && errors.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(H6, {\n              mb: 1,\n              children: \"Add Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"icon-button-file\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                id: \"icon-button-file\",\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                disableRipple: true,\n                component: \"span\",\n                sx: {\n                  padding: 0,\n                  display: \"block\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    minHeight: 40,\n                    display: \"flex\",\n                    borderRadius: \"8px\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    backgroundColor: \"divider\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ImageUploadIcon, {\n                    sx: {\n                      fontSize: 18,\n                      marginRight: 0.5,\n                      color: \"text.disabled\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Small, {\n                    color: \"text.disabled\",\n                    children: \"Choose a file\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexBox, {\n          justifyContent: \"flex-end\",\n          marginTop: 4,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            size: \"small\",\n            variant: \"outlined\",\n            onClick: onClose,\n            sx: {\n              width: 124,\n              fontSize: 12,\n              marginRight: 2,\n              color: \"text.disabled\",\n              borderColor: \"text.disabled\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            size: \"small\",\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              width: 124,\n              fontSize: 12\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AddEmployeeModal, \"48kjdu/sGpkF8tbzNFTlpNcpR3o=\", false, function () {\n  return [useFormik];\n});\n\n_c = AddEmployeeModal;\nexport default AddEmployeeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEmployeeModal\");","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/components/dataTable/dataTableV1/AddEmployeeModal.jsx"],"names":["Box","Button","Card","Grid","IconButton","Modal","styled","DarkTextField","FlexBox","H2","H6","Small","useFormik","ImageUploadIcon","toast","axiosInstance","Yup","StyledModalCard","theme","top","left","maxWidth","minWidth","position","padding","boxShadow","shadows","transform","width","breakpoints","down","AddEmployeeModal","open","onClose","edit","data","initialValues","name","username","email","avatar","role","fieldValidationSchema","object","shape","string","min","required","values","errors","handleChange","handleSubmit","touched","validationSchema","onSubmit","post","then","success","catch","error","console","log","Boolean","display","minHeight","borderRadius","alignItems","justifyContent","backgroundColor","fontSize","marginRight","color","borderColor"],"mappings":"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","sourcesContent":["import { Box, Button, Card, Grid, IconButton, Modal, styled } from \"@mui/material\";\nimport DarkTextField from \"components/DarkTextField\";\nimport FlexBox from \"components/FlexBox\";\nimport { H2, H6, Small } from \"components/Typography\";\nimport { useFormik } from \"formik\";\nimport ImageUploadIcon from \"icons/ImageUploadIcon\";\nimport toast from \"react-hot-toast\";\nimport axiosInstance from \"utils/axios\";\nimport * as Yup from \"yup\"; // component props interface\n\n// styled components\nconst StyledModalCard = styled(Card)(({\n  theme\n}) => ({\n  top: \"50%\",\n  left: \"50%\",\n  maxWidth: 400,\n  minWidth: 200,\n  position: \"absolute\",\n  padding: \"1.5rem\",\n  boxShadow: theme.shadows[2],\n  transform: \"translate(-50%, -50%)\",\n  width: \"100%\",\n  [theme.breakpoints.down(325)]: {\n    maxWidth: \"100%\"\n  }\n}));\n\nconst AddEmployeeModal = ({\n  open,\n  onClose,\n  edit,\n  data\n}) => {\n  const initialValues = {\n    name: data?.name || \"\",\n    username: data?.username || \"\",\n    email: data?.email || \"\",\n    avatar: data?.avatar || \"\",\n    role: data?.role || \"\"\n  };\n  const fieldValidationSchema = Yup.object().shape({\n    name: Yup.string().min(3, \"Too Short\").required(\"Name is Required!\"),\n    username: Yup.string().min(3, \"Too Short\").required(\"Username is Required!\"),\n    email: Yup.string().required(\"Email is Required!\"),\n    // avatar: Yup.string().required(\"Avatar is Required!\"),\n    role: Yup.string().required(\"Role is Required!\")\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    touched\n  } = useFormik({\n    initialValues,\n    validationSchema: fieldValidationSchema,\n    onSubmit: values => {\n      axiosInstance.post(\"/api/tableData1/new\", {\n        name: values.name,\n        username: values.username,\n        email: values.email,\n        role: values.role\n      }).then(() => {\n        onClose();\n        toast.success(\"New Data Added Successfully\");\n      }).catch(error => console.log(error));\n    }\n  });\n  return <Modal open={open} onClose={onClose}>\n      <StyledModalCard>\n        <H2 mb={2}>{edit ? \"Edit Employee\" : \"Add new Employee\"}</H2>\n\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2} className=\"main-form\">\n            <Grid item xs={12}>\n              <H6 mb={1}>Name</H6>\n              <DarkTextField name=\"name\" placeholder=\"Name\" onChange={handleChange} value={values.name} error={Boolean(errors.name && touched.name)} helperText={touched.name && errors.name} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <H6 mb={1}>Username</H6>\n              <DarkTextField name=\"username\" placeholder=\"Username\" onChange={handleChange} value={values.username} error={Boolean(errors.username && touched.username)} helperText={touched.username && errors.username} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <H6 mb={1}>Email</H6>\n              <DarkTextField name=\"email\" placeholder=\"uilib@gmail.com\" onChange={handleChange} value={values.email} error={Boolean(errors.email && touched.email)} helperText={touched.email && errors.email} />\n            </Grid>\n            <Grid item xs={12}>\n              <H6 mb={1}>Role</H6>\n              <DarkTextField name=\"role\" placeholder=\"developer\" onChange={handleChange} value={values.role} error={Boolean(errors.role && touched.role)} helperText={touched.role && errors.role} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <H6 mb={1}>Add Picture</H6>\n\n              <label htmlFor=\"icon-button-file\">\n                <input type=\"file\" accept=\"image/*\" id=\"icon-button-file\" style={{\n                display: \"none\"\n              }} />\n                <IconButton disableRipple component=\"span\" sx={{\n                padding: 0,\n                display: \"block\"\n              }}>\n                  <Box sx={{\n                  minHeight: 40,\n                  display: \"flex\",\n                  borderRadius: \"8px\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"divider\"\n                }}>\n                    <ImageUploadIcon sx={{\n                    fontSize: 18,\n                    marginRight: 0.5,\n                    color: \"text.disabled\"\n                  }} />\n                    <Small color=\"text.disabled\">Choose a file</Small>\n                  </Box>\n                </IconButton>\n              </label>\n            </Grid>\n          </Grid>\n\n          <FlexBox justifyContent=\"flex-end\" marginTop={4}>\n            <Button fullWidth size=\"small\" variant=\"outlined\" onClick={onClose} sx={{\n            width: 124,\n            fontSize: 12,\n            marginRight: 2,\n            color: \"text.disabled\",\n            borderColor: \"text.disabled\"\n          }}>\n              Cancel\n            </Button>\n            <Button fullWidth size=\"small\" type=\"submit\" variant=\"contained\" sx={{\n            width: 124,\n            fontSize: 12\n          }}>\n              Save\n            </Button>\n          </FlexBox>\n        </form>\n      </StyledModalCard>\n    </Modal>;\n};\n\nexport default AddEmployeeModal;"]},"metadata":{},"sourceType":"module"}