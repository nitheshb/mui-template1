{"ast":null,"code":"import { format } from \"date-fns\";\nimport uniqueId from \"utils/generateId\";\nimport Mock from \"./mock\";\nconst tableData1 = [{\n  id: uniqueId(),\n  avatar: \"/static/avatar/001-man.svg\",\n  name: \"Zachary Gomez\",\n  username: \"zachary-gomez\",\n  email: \"zachary-gomez@gmail.com\",\n  role: \"Editor\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/002-girl.svg\",\n  name: \"Amanda Montgomery\",\n  username: \"amanda-montgomery\",\n  email: \"montgomery@ya.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/003-boy.svg\",\n  name: \"Lester Holland\",\n  username: \"lester-holland\",\n  email: \"lester75@gmail.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/004-woman.svg\",\n  name: \"Max Allison\",\n  username: \"max-allison\",\n  email: \"max-allison@pochta.io\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/005-man-1.svg\",\n  name: \"Richard Gregory\",\n  username: \"r.gregory\",\n  email: \"gregory@gmail.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/006-woman-1.svg\",\n  name: \"Clifford Caldwell\",\n  username: \"clifford-caldwell\",\n  email: \"clifford-c@gmail.com\",\n  role: \"Author\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/007-boy-1.svg\",\n  name: \"Lester Holland\",\n  username: \"zlester-holland\",\n  email: \"lester75@gmail.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/008-clown.svg\",\n  name: \"Richard Gregory\",\n  username: \"r.gregory\",\n  email: \"gregory@gmail.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/009-firefighter.svg\",\n  name: \"Max Allison\",\n  username: \"max-allison\",\n  email: \"max-allison@pochta.io\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/010-girl-1.svg\",\n  name: \"Zachary Gomez\",\n  username: \"zachary-gomez\",\n  email: \"zachary-gomez@gmail.com\",\n  role: \"Editor\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/011-man-2.svg\",\n  name: \"Zachary Gomez\",\n  username: \"zachary-gomez\",\n  email: \"zachary-gomez@gmail.com\",\n  role: \"Editor\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/012-woman-2.svg\",\n  name: \"Zachary Gomez\",\n  username: \"zachary-gomez\",\n  email: \"zachary-gomez@gmail.com\",\n  role: \"Editor\"\n}];\nMock.onGet(\"/api/tableData1/all\").reply(config => {\n  return [200, tableData1];\n});\nMock.onPost(\"/api/tableData1/new\").reply(config => {\n  const {\n    name,\n    username,\n    email,\n    role\n  } = JSON.parse(config.data);\n  const newData = {\n    role,\n    name,\n    email,\n    username,\n    id: uniqueId(),\n    avatar: \"/static/avatar/012-woman-2.svg\"\n  };\n  tableData1.push(newData);\n  return [200, tableData1];\n});\nMock.onPost(\"/api/tableData1/delete\").reply(config => {\n  const {\n    ids\n  } = JSON.parse(config.data);\n  const filterTable = tableData1.filter((data, index) => data.id !== ids[index]);\n  return [200, filterTable];\n}); // ============================================================\n\nconst dateOfBirth = format(new Date(2021, 11, 2), \"MMM dd, yyyy\");\nconst tableData2 = [{\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/001-man.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Callins\",\n  position: \"Editor\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/002-girl.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/003-boy.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/004-woman.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/005-man-1.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/001-man.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Callins\",\n  position: \"Editor\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/002-girl.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/003-boy.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/004-woman.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/005-man-1.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/001-man.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Callins\",\n  position: \"Editor\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/002-girl.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/003-boy.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/004-woman.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/005-man-1.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}];\nMock.onGet(\"/api/tableData2/all\").reply(config => {\n  return [200, tableData2];\n});\nMock.onPost(\"/api/tableData2/new\").reply(config => {\n  const {\n    name,\n    username,\n    email,\n    position,\n    team,\n    experience,\n    dateOfBirth,\n    address,\n    status\n  } = JSON.parse(config.data);\n  const newObj = {\n    name,\n    email,\n    username,\n    position,\n    team,\n    experience,\n    address,\n    status,\n    id: uniqueId(),\n    avatar: \"/static/avatar/012-woman-2.svg\",\n    dateOfBirth: format(new Date(dateOfBirth), \"MMM dd, yyyy\")\n  };\n  tableData2.push(newObj);\n  return [200, tableData2];\n});\nMock.onPost(\"/api/tableData2/delete\").reply(config => {\n  const {\n    ids\n  } = JSON.parse(config.data);\n  const filterTable = tableData2.filter((data, index) => data.id !== ids[index]);\n  return [200, filterTable];\n});","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/__fakeApi__/dataTable.js"],"names":["format","uniqueId","Mock","tableData1","id","avatar","name","username","email","role","onGet","reply","config","onPost","JSON","parse","data","newData","push","ids","filterTable","filter","index","dateOfBirth","Date","tableData2","position","team","experience","phone","address","status","newObj"],"mappings":"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","sourcesContent":["import { format } from \"date-fns\";\nimport uniqueId from \"utils/generateId\";\nimport Mock from \"./mock\";\nconst tableData1 = [{\n  id: uniqueId(),\n  avatar: \"/static/avatar/001-man.svg\",\n  name: \"Zachary Gomez\",\n  username: \"zachary-gomez\",\n  email: \"zachary-gomez@gmail.com\",\n  role: \"Editor\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/002-girl.svg\",\n  name: \"Amanda Montgomery\",\n  username: \"amanda-montgomery\",\n  email: \"montgomery@ya.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/003-boy.svg\",\n  name: \"Lester Holland\",\n  username: \"lester-holland\",\n  email: \"lester75@gmail.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/004-woman.svg\",\n  name: \"Max Allison\",\n  username: \"max-allison\",\n  email: \"max-allison@pochta.io\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/005-man-1.svg\",\n  name: \"Richard Gregory\",\n  username: \"r.gregory\",\n  email: \"gregory@gmail.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/006-woman-1.svg\",\n  name: \"Clifford Caldwell\",\n  username: \"clifford-caldwell\",\n  email: \"clifford-c@gmail.com\",\n  role: \"Author\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/007-boy-1.svg\",\n  name: \"Lester Holland\",\n  username: \"zlester-holland\",\n  email: \"lester75@gmail.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/008-clown.svg\",\n  name: \"Richard Gregory\",\n  username: \"r.gregory\",\n  email: \"gregory@gmail.com\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/009-firefighter.svg\",\n  name: \"Max Allison\",\n  username: \"max-allison\",\n  email: \"max-allison@pochta.io\",\n  role: \"Subscriber\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/010-girl-1.svg\",\n  name: \"Zachary Gomez\",\n  username: \"zachary-gomez\",\n  email: \"zachary-gomez@gmail.com\",\n  role: \"Editor\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/011-man-2.svg\",\n  name: \"Zachary Gomez\",\n  username: \"zachary-gomez\",\n  email: \"zachary-gomez@gmail.com\",\n  role: \"Editor\"\n}, {\n  id: uniqueId(),\n  avatar: \"/static/avatar/012-woman-2.svg\",\n  name: \"Zachary Gomez\",\n  username: \"zachary-gomez\",\n  email: \"zachary-gomez@gmail.com\",\n  role: \"Editor\"\n}];\nMock.onGet(\"/api/tableData1/all\").reply(config => {\n  return [200, tableData1];\n});\nMock.onPost(\"/api/tableData1/new\").reply(config => {\n  const {\n    name,\n    username,\n    email,\n    role\n  } = JSON.parse(config.data);\n  const newData = {\n    role,\n    name,\n    email,\n    username,\n    id: uniqueId(),\n    avatar: \"/static/avatar/012-woman-2.svg\"\n  };\n  tableData1.push(newData);\n  return [200, tableData1];\n});\nMock.onPost(\"/api/tableData1/delete\").reply(config => {\n  const {\n    ids\n  } = JSON.parse(config.data);\n  const filterTable = tableData1.filter((data, index) => data.id !== ids[index]);\n  return [200, filterTable];\n}); // ============================================================\n\nconst dateOfBirth = format(new Date(2021, 11, 2), \"MMM dd, yyyy\");\nconst tableData2 = [{\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/001-man.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Callins\",\n  position: \"Editor\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/002-girl.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/003-boy.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/004-woman.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/005-man-1.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/001-man.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Callins\",\n  position: \"Editor\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/002-girl.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/003-boy.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/004-woman.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/005-man-1.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/001-man.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Callins\",\n  position: \"Editor\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/002-girl.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Designer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/003-boy.svg\",\n  dateOfBirth,\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/004-woman.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}, {\n  id: uniqueId(),\n  name: \"Lily Collins\",\n  position: \"Developer\",\n  team: 15,\n  experience: \"3 years\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/005-man-1.svg\",\n  dateOfBirth: format(new Date(2021, 10, 5), \"MMM dd, yyyy\"),\n  email: \"Uilib@gmail.com\",\n  address: \"Corner View, Sylhet\",\n  status: \"Full Time\"\n}];\nMock.onGet(\"/api/tableData2/all\").reply(config => {\n  return [200, tableData2];\n});\nMock.onPost(\"/api/tableData2/new\").reply(config => {\n  const {\n    name,\n    username,\n    email,\n    position,\n    team,\n    experience,\n    dateOfBirth,\n    address,\n    status\n  } = JSON.parse(config.data);\n  const newObj = {\n    name,\n    email,\n    username,\n    position,\n    team,\n    experience,\n    address,\n    status,\n    id: uniqueId(),\n    avatar: \"/static/avatar/012-woman-2.svg\",\n    dateOfBirth: format(new Date(dateOfBirth), \"MMM dd, yyyy\")\n  };\n  tableData2.push(newObj);\n  return [200, tableData2];\n});\nMock.onPost(\"/api/tableData2/delete\").reply(config => {\n  const {\n    ids\n  } = JSON.parse(config.data);\n  const filterTable = tableData2.filter((data, index) => data.id !== ids[index]);\n  return [200, filterTable];\n});"]},"metadata":{},"sourceType":"module"}