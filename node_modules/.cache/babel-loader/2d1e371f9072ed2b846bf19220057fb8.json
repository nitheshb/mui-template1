{"ast":null,"code":"var _jsxFileName = \"/Users/batapatn/Documents/myRepos/uko-javascript/src/components/Layouts/DashboardNavbar.jsx\",\n    _s = $RefreshSig$();\n\nimport { Brightness4 } from \"@mui/icons-material\";\nimport { AppBar, Box, IconButton, styled, Toolbar, useMediaQuery } from \"@mui/material\";\nimport FlexBox from \"components/FlexBox\";\nimport { H2 } from \"components/Typography\";\nimport { SettingsContext } from \"contexts/SettingsContext\";\nimport { TitleContext } from \"contexts/TitleContext\";\nimport LTR from \"icons/LTR\";\nimport RtlIcon from \"icons/RTL\";\nimport ThemeIcon from \"icons/ThemeIcon\";\nimport { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { THEMES } from \"../../constants\";\nimport ActivityPopover from \"./popovers/ActivityPopover\";\nimport LanguagePopover from \"./popovers/LanguagePopover\";\nimport NotificationsPopover from \"./popovers/NotificationsPopover\";\nimport ProfilePopover from \"./popovers/ProfilePopover\";\nimport ServicePopover from \"./popovers/ServicePopover\"; // root component interface\n// custom styled components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardNavbarRoot = styled(AppBar)(() => ({\n  zIndex: 11,\n  boxShadow: \"none\",\n  paddingTop: \"1rem\",\n  paddingBottom: \"1rem\",\n  backdropFilter: \"blur(6px)\",\n  backgroundColor: \"transparent\"\n}));\nconst StyledToolBar = styled(Toolbar)(() => ({\n  \"@media (min-width: 0px)\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n    minHeight: \"auto\"\n  }\n}));\nconst StyledIconButton = styled(IconButton)(() => ({\n  \"&:hover\": {\n    backgroundColor: \"transparent\"\n  }\n}));\nconst ToggleIcon = styled(Box)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    width: 25,\n    height: 3,\n    margin: \"5px\",\n    borderRadius: \"10px\",\n    transition: \"width 0.3s\",\n    backgroundColor: theme.palette.primary.main\n  };\n}); // root component\n\nconst DashboardNavbar = props => {\n  _s();\n\n  const {\n    sideBarLocked,\n    setSideBarLocked,\n    setShowMobileSideBar,\n    setOpenSecondarySideBar\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const {\n    title\n  } = useContext(TitleContext);\n  const {\n    settings,\n    saveSettings\n  } = useContext(SettingsContext);\n  const downMd = useMediaQuery(theme => theme.breakpoints.down(1200));\n  const upSm = useMediaQuery(theme => theme.breakpoints.up(\"sm\"));\n  const downSm = useMediaQuery(theme => theme.breakpoints.down(\"sm\"));\n\n  const handleChangeTheme = theme => {\n    saveSettings({ ...settings,\n      theme\n    });\n  };\n\n  const handleChangeDirection = direction => {\n    saveSettings({ ...settings,\n      direction\n    });\n  };\n\n  const handleToggleBtn = () => {\n    if (downMd) {\n      setShowMobileSideBar();\n    } else {\n      setSideBarLocked();\n      setOpenSecondarySideBar();\n    }\n  };\n\n  if (downSm) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardNavbarRoot, {\n        position: \"sticky\",\n        children: /*#__PURE__*/_jsxDEV(StyledToolBar, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              cursor: \"pointer\"\n            },\n            onClick: handleToggleBtn,\n            children: [/*#__PURE__*/_jsxDEV(ToggleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleIcon, {\n              sx: {\n                width: sideBarLocked ? 25 : 15\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            flexGrow: 1,\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/static/logo/logo.svg\",\n              width: \"100%\",\n              height: \"30\",\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LanguagePopover, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProfilePopover, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexBox, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(H2, {\n          fontSize: 21,\n          lineHeight: 0,\n          fontWeight: \"700\",\n          color: \"text.primary\",\n          children: t(title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [settings.direction === \"ltr\" ? /*#__PURE__*/_jsxDEV(StyledIconButton, {\n            disableRipple: true,\n            onClick: () => handleChangeDirection(\"rtl\"),\n            children: /*#__PURE__*/_jsxDEV(RtlIcon, {\n              sx: {\n                color: \"text.disabled\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(StyledIconButton, {\n            disableRipple: true,\n            onClick: () => handleChangeDirection(\"ltr\"),\n            children: /*#__PURE__*/_jsxDEV(LTR, {\n              sx: {\n                color: \"text.disabled\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 37\n          }, this), settings.theme === \"light\" ? /*#__PURE__*/_jsxDEV(StyledIconButton, {\n            disableRipple: true,\n            onClick: () => handleChangeTheme(THEMES.DARK),\n            children: /*#__PURE__*/_jsxDEV(ThemeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(StyledIconButton, {\n            disableRipple: true,\n            onClick: () => handleChangeTheme(THEMES.LIGHT),\n            children: /*#__PURE__*/_jsxDEV(Brightness4, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(DashboardNavbarRoot, {\n    position: \"sticky\",\n    children: /*#__PURE__*/_jsxDEV(StyledToolBar, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          cursor: \"pointer\"\n        },\n        onClick: handleToggleBtn,\n        children: [/*#__PURE__*/_jsxDEV(ToggleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleIcon, {\n          sx: {\n            width: sideBarLocked ? 25 : 15\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(H2, {\n        fontSize: 21,\n        lineHeight: 0,\n        mx: 1,\n        fontWeight: \"700\",\n        color: \"text.primary\",\n        children: t(title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexGrow: 1,\n        ml: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), settings.direction === \"ltr\" ? /*#__PURE__*/_jsxDEV(StyledIconButton, {\n        disableRipple: true,\n        onClick: () => handleChangeDirection(\"rtl\"),\n        children: /*#__PURE__*/_jsxDEV(RtlIcon, {\n          sx: {\n            color: \"text.disabled\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(StyledIconButton, {\n        disableRipple: true,\n        onClick: () => handleChangeDirection(\"ltr\"),\n        children: /*#__PURE__*/_jsxDEV(LTR, {\n          sx: {\n            color: \"text.disabled\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }, this), settings.theme === \"light\" ? /*#__PURE__*/_jsxDEV(StyledIconButton, {\n        disableRipple: true,\n        onClick: () => handleChangeTheme(THEMES.DARK),\n        children: /*#__PURE__*/_jsxDEV(ThemeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(StyledIconButton, {\n        disableRipple: true,\n        onClick: () => handleChangeTheme(THEMES.LIGHT),\n        children: /*#__PURE__*/_jsxDEV(Brightness4, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }, this), upSm && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LanguagePopover, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NotificationsPopover, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ServicePopover, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ActivityPopover, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ProfilePopover, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DashboardNavbar, \"es++tm8sL+dnPFhB+0BuV9PGegw=\", false, function () {\n  return [useTranslation, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = DashboardNavbar;\nexport default DashboardNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbar\");","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/components/Layouts/DashboardNavbar.jsx"],"names":["Brightness4","AppBar","Box","IconButton","styled","Toolbar","useMediaQuery","FlexBox","H2","SettingsContext","TitleContext","LTR","RtlIcon","ThemeIcon","useContext","useTranslation","THEMES","ActivityPopover","LanguagePopover","NotificationsPopover","ProfilePopover","ServicePopover","DashboardNavbarRoot","zIndex","boxShadow","paddingTop","paddingBottom","backdropFilter","backgroundColor","StyledToolBar","paddingLeft","paddingRight","minHeight","StyledIconButton","ToggleIcon","theme","width","height","margin","borderRadius","transition","palette","primary","main","DashboardNavbar","props","sideBarLocked","setSideBarLocked","setShowMobileSideBar","setOpenSecondarySideBar","t","title","settings","saveSettings","downMd","breakpoints","down","upSm","up","downSm","handleChangeTheme","handleChangeDirection","direction","handleToggleBtn","cursor","color","DARK","LIGHT"],"mappings":"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","sourcesContent":["import { Brightness4 } from \"@mui/icons-material\";\nimport { AppBar, Box, IconButton, styled, Toolbar, useMediaQuery } from \"@mui/material\";\nimport FlexBox from \"components/FlexBox\";\nimport { H2 } from \"components/Typography\";\nimport { SettingsContext } from \"contexts/SettingsContext\";\nimport { TitleContext } from \"contexts/TitleContext\";\nimport LTR from \"icons/LTR\";\nimport RtlIcon from \"icons/RTL\";\nimport ThemeIcon from \"icons/ThemeIcon\";\nimport { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { THEMES } from \"../../constants\";\nimport ActivityPopover from \"./popovers/ActivityPopover\";\nimport LanguagePopover from \"./popovers/LanguagePopover\";\nimport NotificationsPopover from \"./popovers/NotificationsPopover\";\nimport ProfilePopover from \"./popovers/ProfilePopover\";\nimport ServicePopover from \"./popovers/ServicePopover\"; // root component interface\n\n// custom styled components\nconst DashboardNavbarRoot = styled(AppBar)(() => ({\n  zIndex: 11,\n  boxShadow: \"none\",\n  paddingTop: \"1rem\",\n  paddingBottom: \"1rem\",\n  backdropFilter: \"blur(6px)\",\n  backgroundColor: \"transparent\"\n}));\nconst StyledToolBar = styled(Toolbar)(() => ({\n  \"@media (min-width: 0px)\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n    minHeight: \"auto\"\n  }\n}));\nconst StyledIconButton = styled(IconButton)(() => ({\n  \"&:hover\": {\n    backgroundColor: \"transparent\"\n  }\n}));\nconst ToggleIcon = styled(Box)(({\n  theme\n}) => ({\n  width: 25,\n  height: 3,\n  margin: \"5px\",\n  borderRadius: \"10px\",\n  transition: \"width 0.3s\",\n  backgroundColor: theme.palette.primary.main\n})); // root component\n\nconst DashboardNavbar = props => {\n  const {\n    sideBarLocked,\n    setSideBarLocked,\n    setShowMobileSideBar,\n    setOpenSecondarySideBar\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const {\n    title\n  } = useContext(TitleContext);\n  const {\n    settings,\n    saveSettings\n  } = useContext(SettingsContext);\n  const downMd = useMediaQuery(theme => theme.breakpoints.down(1200));\n  const upSm = useMediaQuery(theme => theme.breakpoints.up(\"sm\"));\n  const downSm = useMediaQuery(theme => theme.breakpoints.down(\"sm\"));\n\n  const handleChangeTheme = theme => {\n    saveSettings({ ...settings,\n      theme\n    });\n  };\n\n  const handleChangeDirection = direction => {\n    saveSettings({ ...settings,\n      direction\n    });\n  };\n\n  const handleToggleBtn = () => {\n    if (downMd) {\n      setShowMobileSideBar();\n    } else {\n      setSideBarLocked();\n      setOpenSecondarySideBar();\n    }\n  };\n\n  if (downSm) {\n    return <>\n        <DashboardNavbarRoot position=\"sticky\">\n          <StyledToolBar>\n            <Box sx={{\n            cursor: \"pointer\"\n          }} onClick={handleToggleBtn}>\n              <ToggleIcon />\n              <ToggleIcon sx={{\n              width: sideBarLocked ? 25 : 15\n            }} />\n              <ToggleIcon />\n            </Box>\n\n            <Box flexGrow={1} textAlign=\"center\">\n              <img src=\"/static/logo/logo.svg\" width=\"100%\" height=\"30\" alt=\"Logo\" />\n            </Box>\n\n            <LanguagePopover />\n            <ProfilePopover />\n          </StyledToolBar>\n        </DashboardNavbarRoot>\n\n        <FlexBox alignItems=\"center\" justifyContent=\"space-between\">\n          <H2 fontSize={21} lineHeight={0} fontWeight=\"700\" color=\"text.primary\">\n            {t(title)}\n          </H2>\n\n          <Box>\n            {settings.direction === \"ltr\" ? <StyledIconButton disableRipple onClick={() => handleChangeDirection(\"rtl\")}>\n                <RtlIcon sx={{\n              color: \"text.disabled\"\n            }} />\n              </StyledIconButton> : <StyledIconButton disableRipple onClick={() => handleChangeDirection(\"ltr\")}>\n                <LTR sx={{\n              color: \"text.disabled\"\n            }} />\n              </StyledIconButton>}\n\n            {settings.theme === \"light\" ? <StyledIconButton disableRipple onClick={() => handleChangeTheme(THEMES.DARK)}>\n                <ThemeIcon />\n              </StyledIconButton> : <StyledIconButton disableRipple onClick={() => handleChangeTheme(THEMES.LIGHT)}>\n                <Brightness4 />\n              </StyledIconButton>}\n          </Box>\n        </FlexBox>\n      </>;\n  }\n\n  return <DashboardNavbarRoot position=\"sticky\">\n      <StyledToolBar>\n        <Box sx={{\n        cursor: \"pointer\"\n      }} onClick={handleToggleBtn}>\n          <ToggleIcon />\n          <ToggleIcon sx={{\n          width: sideBarLocked ? 25 : 15\n        }} />\n          <ToggleIcon />\n        </Box>\n\n        <H2 fontSize={21} lineHeight={0} mx={1} fontWeight=\"700\" color=\"text.primary\">\n          {t(title)}\n        </H2>\n\n        <Box flexGrow={1} ml={1} />\n\n        {settings.direction === \"ltr\" ? <StyledIconButton disableRipple onClick={() => handleChangeDirection(\"rtl\")}>\n            <RtlIcon sx={{\n          color: \"text.disabled\"\n        }} />\n          </StyledIconButton> : <StyledIconButton disableRipple onClick={() => handleChangeDirection(\"ltr\")}>\n            <LTR sx={{\n          color: \"text.disabled\"\n        }} />\n          </StyledIconButton>}\n\n        {settings.theme === \"light\" ? <StyledIconButton disableRipple onClick={() => handleChangeTheme(THEMES.DARK)}>\n            <ThemeIcon />\n          </StyledIconButton> : <StyledIconButton disableRipple onClick={() => handleChangeTheme(THEMES.LIGHT)}>\n            <Brightness4 />\n          </StyledIconButton>}\n\n        {upSm && <>\n            <LanguagePopover />\n            <NotificationsPopover />\n            <ServicePopover />\n            <ActivityPopover />\n          </>}\n        <ProfilePopover />\n      </StyledToolBar>\n    </DashboardNavbarRoot>;\n};\n\nexport default DashboardNavbar;"]},"metadata":{},"sourceType":"module"}