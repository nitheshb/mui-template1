{"ast":null,"code":"var _jsxFileName = \"/Users/batapatn/Documents/myRepos/uko-javascript/src/components/Layouts/popovers/LanguagePopover.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, IconButton, MenuItem, Popover, styled } from \"@mui/material\";\nimport { H6 } from \"components/Typography\";\nimport { useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\"; // dummy language options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst languageOptions = {\n  en: {\n    icon: \"/static/flags/usa.png\",\n    label: \"English\"\n  },\n  es: {\n    icon: \"/static/flags/spain.png\",\n    label: \"Spanish\"\n  },\n  hi: {\n    icon: \"/static/flags/in.png\",\n    label: \"Hindi\"\n  }\n}; // custom styled components\n\nconst IconWrapper = styled(Box)(() => ({\n  display: \"flex\",\n  height: 20,\n  width: 20,\n  \"& img\": {\n    width: \"100%\",\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  }\n}));\nconst ItemWrapper = styled(Box)(() => ({\n  display: \"flex\",\n  \"& img\": {\n    width: \"100%\"\n  }\n}));\n\nconst LanguagePopover = () => {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const {\n    i18n\n  } = useTranslation();\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const handleChangeLanguage = language => {\n    i18n.changeLanguage(language);\n    setOpen(false);\n  };\n\n  const selectedLanguage = languageOptions[i18n.language];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleOpen,\n      ref: anchorRef,\n      children: /*#__PURE__*/_jsxDEV(IconWrapper, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: selectedLanguage.label,\n          src: selectedLanguage.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      keepMounted: true,\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      anchorOrigin: {\n        horizontal: \"center\",\n        vertical: \"bottom\"\n      },\n      PaperProps: {\n        sx: {\n          width: 150,\n          padding: \"0.5rem 0\"\n        }\n      },\n      children: Object.keys(languageOptions).map(language => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleChangeLanguage(language),\n        children: /*#__PURE__*/_jsxDEV(ItemWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: languageOptions[language].label,\n            src: languageOptions[language].icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(H6, {\n            fontWeight: 600,\n            ml: 1,\n            children: languageOptions[language].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, languageOptions[language].label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 55\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LanguagePopover, \"o9w5OKeUusUyCwn9C1vTMxwunPE=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguagePopover;\nexport default LanguagePopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagePopover\");","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/components/Layouts/popovers/LanguagePopover.jsx"],"names":["Box","IconButton","MenuItem","Popover","styled","H6","useRef","useState","useTranslation","languageOptions","en","icon","label","es","hi","IconWrapper","display","height","width","borderRadius","objectFit","ItemWrapper","LanguagePopover","anchorRef","open","setOpen","i18n","handleOpen","handleClose","handleChangeLanguage","language","changeLanguage","selectedLanguage","current","horizontal","vertical","sx","padding","Object","keys","map"],"mappings":"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","sourcesContent":["import { Box, IconButton, MenuItem, Popover, styled } from \"@mui/material\";\nimport { H6 } from \"components/Typography\";\nimport { useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\"; // dummy language options\n\nconst languageOptions = {\n  en: {\n    icon: \"/static/flags/usa.png\",\n    label: \"English\"\n  },\n  es: {\n    icon: \"/static/flags/spain.png\",\n    label: \"Spanish\"\n  },\n  hi: {\n    icon: \"/static/flags/in.png\",\n    label: \"Hindi\"\n  }\n}; // custom styled components\n\nconst IconWrapper = styled(Box)(() => ({\n  display: \"flex\",\n  height: 20,\n  width: 20,\n  \"& img\": {\n    width: \"100%\",\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  }\n}));\nconst ItemWrapper = styled(Box)(() => ({\n  display: \"flex\",\n  \"& img\": {\n    width: \"100%\"\n  }\n}));\n\nconst LanguagePopover = () => {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const {\n    i18n\n  } = useTranslation();\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const handleChangeLanguage = language => {\n    i18n.changeLanguage(language);\n    setOpen(false);\n  };\n\n  const selectedLanguage = languageOptions[i18n.language];\n  return <>\n      <IconButton onClick={handleOpen} ref={anchorRef}>\n        <IconWrapper>\n          <img alt={selectedLanguage.label} src={selectedLanguage.icon} />\n        </IconWrapper>\n      </IconButton>\n      <Popover keepMounted open={open} onClose={handleClose} anchorEl={anchorRef.current} anchorOrigin={{\n      horizontal: \"center\",\n      vertical: \"bottom\"\n    }} PaperProps={{\n      sx: {\n        width: 150,\n        padding: \"0.5rem 0\"\n      }\n    }}>\n        {Object.keys(languageOptions).map(language => <MenuItem key={languageOptions[language].label} onClick={() => handleChangeLanguage(language)}>\n            <ItemWrapper>\n              <img alt={languageOptions[language].label} src={languageOptions[language].icon} />\n              <H6 fontWeight={600} ml={1}>\n                {languageOptions[language].label}\n              </H6>\n            </ItemWrapper>\n          </MenuItem>)}\n      </Popover>\n    </>;\n};\n\nexport default LanguagePopover;"]},"metadata":{},"sourceType":"module"}