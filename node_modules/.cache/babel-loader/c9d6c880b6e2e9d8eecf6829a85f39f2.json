{"ast":null,"code":"var _jsxFileName = \"/Users/batapatn/Documents/myRepos/uko-javascript/src/components/RTL.jsx\",\n    _s = $RefreshSig$();\n\nimport createCache from \"@emotion/cache\";\nimport { CacheProvider } from \"@emotion/react\";\nimport { useEffect } from \"react\";\nimport rtlPlugin from \"stylis-plugin-rtl\"; // component props types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst cacheRTL = () => createCache({\n  key: \"rtl\",\n  prepend: true,\n  stylisPlugins: [rtlPlugin]\n});\n\nconst RTL = _ref => {\n  _s();\n\n  let {\n    children,\n    direction\n  } = _ref;\n  // const theme = useTheme();\n  useEffect(() => {\n    // document.dir = theme.direction;\n    document.dir = direction;\n  }, [direction]); // const cacheRTL = createCache({\n  //   key: theme.direction === \"rtl\" ? \"rtl\" : \"css\",\n  //   // @ts-ignore\n  //   stylisPlugins: theme.direction === \"rtl\" ? [rtlPlugin] : [],\n  // });\n  // cacheRTL.compat = true;\n  // return <CacheProvider value={cacheRTL()}>{children}</CacheProvider>;\n\n  if (direction === \"rtl\") {\n    return /*#__PURE__*/_jsxDEV(CacheProvider, {\n      value: cacheRTL(),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n_s(RTL, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = RTL;\nexport default RTL;\n\nvar _c;\n\n$RefreshReg$(_c, \"RTL\");","map":{"version":3,"sources":["/Users/batapatn/Documents/myRepos/uko-javascript/src/components/RTL.jsx"],"names":["createCache","CacheProvider","useEffect","rtlPlugin","cacheRTL","key","prepend","stylisPlugins","RTL","children","direction","document","dir"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,mBAAtB,C,CAA2C;;;;;AAE3C,MAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAAC;AACjCK,EAAAA,GAAG,EAAE,KAD4B;AAEjCC,EAAAA,OAAO,EAAE,IAFwB;AAGjCC,EAAAA,aAAa,EAAE,CAACJ,SAAD;AAHkB,CAAD,CAAlC;;AAMA,MAAMK,GAAG,GAAG,QAGN;AAAA;;AAAA,MAHO;AACXC,IAAAA,QADW;AAEXC,IAAAA;AAFW,GAGP;AACJ;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACAS,IAAAA,QAAQ,CAACC,GAAT,GAAeF,SAAf;AACD,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT,CAFI,CAKa;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIA,SAAS,KAAK,KAAlB,EAAyB;AACvB,wBAAO,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEN,QAAQ,EAA9B;AAAA,gBAAmCK;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO;AAAA,cAAGA;AAAH,mBAAP;AACD,CArBD;;GAAMD,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import createCache from \"@emotion/cache\";\nimport { CacheProvider } from \"@emotion/react\";\nimport { useEffect } from \"react\";\nimport rtlPlugin from \"stylis-plugin-rtl\"; // component props types\n\nconst cacheRTL = () => createCache({\n  key: \"rtl\",\n  prepend: true,\n  stylisPlugins: [rtlPlugin]\n});\n\nconst RTL = ({\n  children,\n  direction\n}) => {\n  // const theme = useTheme();\n  useEffect(() => {\n    // document.dir = theme.direction;\n    document.dir = direction;\n  }, [direction]); // const cacheRTL = createCache({\n  //   key: theme.direction === \"rtl\" ? \"rtl\" : \"css\",\n  //   // @ts-ignore\n  //   stylisPlugins: theme.direction === \"rtl\" ? [rtlPlugin] : [],\n  // });\n  // cacheRTL.compat = true;\n  // return <CacheProvider value={cacheRTL()}>{children}</CacheProvider>;\n\n  if (direction === \"rtl\") {\n    return <CacheProvider value={cacheRTL()}>{children}</CacheProvider>;\n  }\n\n  return <>{children}</>;\n};\n\nexport default RTL;"]},"metadata":{},"sourceType":"module"}